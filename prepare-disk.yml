---
- name: Prepare Docker data disk
  hosts: all
  become: yes
  vars:
    docker_data_device: /dev/nvme0n1
    docker_data_mount: /srv/docker-data
    graylog_data_path: /srv/docker-data/graylog/data
    graylog_stack_path: /srv/docker-data/graylog
    services:
      - mongo
      - graylog    

  tasks:

    - name: Ensure sysctl config exists for vm.max_map_count
      copy:
        dest: /etc/sysctl.d/99-graylog.conf
        content: "vm.max_map_count=262144\n"
        owner: root
        group: root
        mode: '0644'

    - name: Reload sysctl to apply vm.max_map_count immediately
      command: sysctl --system


    - name: Create filesystem on new disk
      community.general.filesystem:
        fstype: ext4
        dev: "{{ docker_data_device }}"
        force: false

    - name: Create mount point
      file:
        path: "{{ docker_data_mount }}"
        state: directory
        mode: '0755'

    - name: Mount the disk
      ansible.posix.mount:
        path: "{{ docker_data_mount }}"
        src: "{{ docker_data_device }}"
        fstype: ext4
        opts: defaults
        state: mounted

    - name: Ensure fstab entry is present
      ansible.posix.mount:
        path: "{{ docker_data_mount }}"
        src: "{{ docker_data_device }}"
        fstype: ext4
        opts: defaults
        state: present

    - name: Create data directories for Graylog stack services
      file:
        path: "{{ graylog_data_path }}/{{ item }}"
        state: directory
        mode: '0770'
        recurse: yes
      loop: "{{ services }}"

    - name: Set ACL permissions for ansibleadmin
      ansible.posix.acl:
        path: "{{ graylog_data_path }}/{{ item }}"
        entity: ansibleadmin
        etype: user
        permissions: rwx
        state: present
        recurse: yes
      loop: "{{ services }}"

    - name: Set default ACL permissions for ansibleadmin
      ansible.posix.acl:
        path: "{{ graylog_data_path }}/{{ item }}"
        entity: ansibleadmin
        etype: user
        permissions: rwx
        default: yes
        state: present
        recurse: yes
      loop: "{{ services }}"

    - name: Set correct ownership for Graylog data directory (UID 1100)
      file:
        path: "{{ graylog_stack_path }}/graylog"
        owner: "1100"
        group: "1100"
        recurse: yes


    - name: Ensure ACL package is installed
      apt:
        name: acl
        state: present
        update_cache: yes


    - name: Apply ACL for ansibleadmin (recursive access)
      command: setfacl -R -m u:ansibleadmin:rwx {{ graylog_stack_path }}


    - name: Apply default ACL for ansibleadmin (future files)
      command: setfacl -R -d -m u:ansibleadmin:rwx {{ graylog_stack_path }}



